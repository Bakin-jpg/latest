# Nama workflow yang akan muncul di tab Actions di GitHub
name: Scrape Latest Anime Data

# Pemicu (trigger) untuk menjalankan workflow ini
on:
  # Menjalankan secara otomatis sesuai jadwal (cron job)
  schedule:
    # '0 */6 * * *' berarti berjalan setiap 6 jam.
    - cron: '0 */6 * * *'
  
  # Memungkinkan Anda menjalankan workflow ini secara manual dari tab Actions
  workflow_dispatch:

# Memberikan izin tulis ke workflow agar bisa melakukan commit dan push.
permissions:
  contents: write

# Mendefinisikan pekerjaan (jobs) yang akan dijalankan
jobs:
  scrape:
    # Menggunakan mesin virtual Ubuntu terbaru
    runs-on: ubuntu-latest

    # Langkah-langkah yang akan dieksekusi
    steps:
      # Langkah 1: Mengunduh (checkout) kode dari repositori Anda
      - name: Check out repository
        uses: actions/checkout@v4

      # Langkah 2: Menyiapkan lingkungan Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Langkah 3: Menginstal semua library Python yang dibutuhkan
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Langkah 4: Menginstal browser (Chromium) yang dibutuhkan oleh Playwright
      - name: Install Playwright browsers
        run: python -m playwright install chromium --with-deps

      # Langkah 5: Menjalankan skrip TES
      - name: Run scraper TEST
        run: python test_scrape.py

      # Langkah 6: Melakukan commit dan push HANYA file hasil tes
      - name: Commit and push TEST results
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # Pesan commit yang akan digunakan
          commit_message: 'Add test scrape results'
          
          # Pola file yang akan di-commit.
          # Ini hanya akan menyimpan file .json dari folder details_test
          file_pattern: 'details_test/*.json'
